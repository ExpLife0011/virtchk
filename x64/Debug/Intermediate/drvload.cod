; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.207 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	ScmHandle
PUBLIC	DriverServiceHandle
PUBLIC	DeviceHandle
_BSS	SEGMENT
ScmHandle DQ	01H DUP (?)
DriverServiceHandle DQ 01H DUP (?)
DeviceHandle DQ	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
$SG81747 DB	'%', 00H, 'w', 00H, 'Z', 00H, 'v', 00H, 'i', 00H, 'r', 00H
	DB	't', 00H, 'c', 00H, 'h', 00H, 'k', 00H, '.', 00H, 's', 00H, 'y'
	DB	00H, 's', 00H, 00H, 00H, 00H, 00H
$SG81748 DB	'Driver Path should be: %ws', 0aH, 00H
	ORG $+4
$SG81749 DB	'v', 00H, 'i', 00H, 'r', 00H, 't', 00H, 'c', 00H, 'h', 00H
	DB	'k', 00H, 00H, 00H
$SG81750 DB	'v', 00H, 'i', 00H, 'r', 00H, 't', 00H, 'c', 00H, 'h', 00H
	DB	'k', 00H, 00H, 00H
$SG81753 DB	'\', 00H, '\', 00H, '.', 00H, '\', 00H, 'v', 00H, 'i', 00H
	DB	'r', 00H, 't', 00H, 'c', 00H, 'h', 00H, 'k', 00H, 00H, 00H
$SG81755 DB	'Failed to load start driver!', 0aH, 00H
	ORG $+2
$SG81758 DB	'Failed to install driver!', 0aH, 00H
	ORG $+5
$SG81759 DB	'Failed to get local path!', 0aH, 00H
_DATA	ENDS
PUBLIC	vtc_rdmsr
EXTRN	__imp_DeviceIoControl:PROC
;	COMDAT pdata
; File d:\projects\virtchk\virtchk\drvload.c
pdata	SEGMENT
$pdata$vtc_rdmsr DD imagerel $LN3
	DD	imagerel $LN3+101
	DD	imagerel $unwind$vtc_rdmsr
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$vtc_rdmsr DD 010801H
	DD	0a208H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT vtc_rdmsr
_TEXT	SEGMENT
msr_value$ = 64
ret_len$ = 72
index$ = 96
vtc_rdmsr PROC						; COMDAT

; 7    : {

$LN3:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	48 83 ec 58	 sub	 rsp, 88			; 00000058H

; 8    : 	u64 msr_value=0;

  00008	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR msr_value$[rsp], 0

; 9    : 	DWORD ret_len=0;

  00011	c7 44 24 48 00
	00 00 00	 mov	 DWORD PTR ret_len$[rsp], 0

; 10   : 	DeviceIoControl(DeviceHandle,CTL_CODE_GEN(0x801),&index,4,&msr_value,8,&ret_len,NULL);

  00019	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR [rsp+56], 0
  00022	48 8d 44 24 48	 lea	 rax, QWORD PTR ret_len$[rsp]
  00027	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0002c	c7 44 24 28 08
	00 00 00	 mov	 DWORD PTR [rsp+40], 8
  00034	48 8d 44 24 40	 lea	 rax, QWORD PTR msr_value$[rsp]
  00039	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0003e	41 b9 04 00 00
	00		 mov	 r9d, 4
  00044	4c 8d 44 24 60	 lea	 r8, QWORD PTR index$[rsp]
  00049	ba 04 20 22 00	 mov	 edx, 2236420		; 00222004H
  0004e	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR DeviceHandle
  00055	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DeviceIoControl

; 11   : 	return msr_value;

  0005b	48 8b 44 24 40	 mov	 rax, QWORD PTR msr_value$[rsp]

; 12   : }

  00060	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00064	c3		 ret	 0
vtc_rdmsr ENDP
_TEXT	ENDS
PUBLIC	InstallDriver
EXTRN	__imp_OpenServiceW:PROC
EXTRN	__imp_GetLastError:PROC
EXTRN	__imp_CreateServiceW:PROC
EXTRN	__imp_OpenSCManagerW:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$InstallDriver DD imagerel $LN6
	DD	imagerel $LN6+258
	DD	imagerel $unwind$InstallDriver
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$InstallDriver DD 021601H
	DD	0110116H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT InstallDriver
_TEXT	SEGMENT
hService$81696 = 112
Err$81703 = 120
DriverPath$ = 144
DisplayName$ = 152
ServiceName$ = 160
InstallDriver PROC					; COMDAT

; 15   : {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 81 ec 88 00
	00 00		 sub	 rsp, 136		; 00000088H

; 16   : 	ScmHandle=OpenSCManagerW(NULL,NULL,SC_MANAGER_ALL_ACCESS);

  00016	41 b8 3f 00 0f
	00		 mov	 r8d, 983103		; 000f003fH
  0001c	33 d2		 xor	 edx, edx
  0001e	33 c9		 xor	 ecx, ecx
  00020	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_OpenSCManagerW
  00026	48 89 05 00 00
	00 00		 mov	 QWORD PTR ScmHandle, rax

; 17   : 	if(ScmHandle)

  0002d	48 83 3d 00 00
	00 00 00	 cmp	 QWORD PTR ScmHandle, 0
  00035	0f 84 bd 00 00
	00		 je	 $LN3@InstallDri

; 18   : 	{
; 19   : 		SC_HANDLE hService=CreateServiceW(ScmHandle,ServiceName,DisplayName,SERVICE_ALL_ACCESS,SERVICE_KERNEL_DRIVER,SERVICE_DEMAND_START,SERVICE_ERROR_NORMAL,DriverPath,NULL,NULL,NULL,NULL,NULL);

  0003b	48 c7 44 24 60
	00 00 00 00	 mov	 QWORD PTR [rsp+96], 0
  00044	48 c7 44 24 58
	00 00 00 00	 mov	 QWORD PTR [rsp+88], 0
  0004d	48 c7 44 24 50
	00 00 00 00	 mov	 QWORD PTR [rsp+80], 0
  00056	48 c7 44 24 48
	00 00 00 00	 mov	 QWORD PTR [rsp+72], 0
  0005f	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR [rsp+64], 0
  00068	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR DriverPath$[rsp]
  00070	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  00075	c7 44 24 30 01
	00 00 00	 mov	 DWORD PTR [rsp+48], 1
  0007d	c7 44 24 28 03
	00 00 00	 mov	 DWORD PTR [rsp+40], 3
  00085	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR [rsp+32], 1
  0008d	41 b9 ff 01 0f
	00		 mov	 r9d, 983551		; 000f01ffH
  00093	4c 8b 84 24 98
	00 00 00	 mov	 r8, QWORD PTR DisplayName$[rsp]
  0009b	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR ServiceName$[rsp]
  000a3	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ScmHandle
  000aa	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CreateServiceW
  000b0	48 89 44 24 70	 mov	 QWORD PTR hService$81696[rsp], rax

; 20   : 		if(!hService)

  000b5	48 83 7c 24 70
	00		 cmp	 QWORD PTR hService$81696[rsp], 0
  000bb	75 34		 jne	 SHORT $LN2@InstallDri

; 21   : 		{
; 22   : 			DWORD Err=GetLastError();

  000bd	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetLastError
  000c3	89 44 24 78	 mov	 DWORD PTR Err$81703[rsp], eax

; 23   : 			if(Err==ERROR_SERVICE_EXISTS)

  000c7	81 7c 24 78 31
	04 00 00	 cmp	 DWORD PTR Err$81703[rsp], 1073 ; 00000431H
  000cf	75 20		 jne	 SHORT $LN1@InstallDri

; 24   : 				hService=OpenServiceW(ScmHandle,ServiceName,SERVICE_ALL_ACCESS);

  000d1	41 b8 ff 01 0f
	00		 mov	 r8d, 983551		; 000f01ffH
  000d7	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR ServiceName$[rsp]
  000df	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ScmHandle
  000e6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_OpenServiceW
  000ec	48 89 44 24 70	 mov	 QWORD PTR hService$81696[rsp], rax
$LN1@InstallDri:
$LN2@InstallDri:

; 25   : 		}
; 26   : 		return hService;

  000f1	48 8b 44 24 70	 mov	 rax, QWORD PTR hService$81696[rsp]
  000f6	eb 02		 jmp	 SHORT $LN4@InstallDri
$LN3@InstallDri:

; 27   : 	}
; 28   : 	return NULL;

  000f8	33 c0		 xor	 eax, eax
$LN4@InstallDri:

; 29   : }

  000fa	48 81 c4 88 00
	00 00		 add	 rsp, 136		; 00000088H
  00101	c3		 ret	 0
InstallDriver ENDP
_TEXT	ENDS
PUBLIC	StartDriver
EXTRN	__imp_Sleep:PROC
EXTRN	__imp_StartServiceW:PROC
EXTRN	__imp_QueryServiceStatus:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$StartDriver DD imagerel $LN8
	DD	imagerel $LN8+124
	DD	imagerel $unwind$StartDriver
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$StartDriver DD 010901H
	DD	0a209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT StartDriver
_TEXT	SEGMENT
Ret$ = 32
ss$ = 40
nTry$81714 = 72
ServiceHandle$ = 96
StartDriver PROC					; COMDAT

; 32   : {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 58	 sub	 rsp, 88			; 00000058H

; 33   : 	SERVICE_STATUS ss;
; 34   : 	BOOL Ret;
; 35   : 	QueryServiceStatus(ServiceHandle,&ss);

  00009	48 8d 54 24 28	 lea	 rdx, QWORD PTR ss$[rsp]
  0000e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR ServiceHandle$[rsp]
  00013	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_QueryServiceStatus

; 36   : 	//if(ss.dwCurrentState==SERVICE_RUNS_IN_SYSTEM_PROCESS)return TRUE;
; 37   : 	Ret=StartServiceW(ServiceHandle,0,NULL);

  00019	45 33 c0	 xor	 r8d, r8d
  0001c	33 d2		 xor	 edx, edx
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR ServiceHandle$[rsp]
  00023	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_StartServiceW
  00029	89 44 24 20	 mov	 DWORD PTR Ret$[rsp], eax

; 38   : 	if(Ret)

  0002d	83 7c 24 20 00	 cmp	 DWORD PTR Ret$[rsp], 0
  00032	74 3f		 je	 SHORT $LN5@StartDrive

; 39   : 	{
; 40   : 		int nTry=0;

  00034	c7 44 24 48 00
	00 00 00	 mov	 DWORD PTR nTry$81714[rsp], 0
$LN4@StartDrive:

; 41   : 		do
; 42   : 		{
; 43   : 			Sleep(50);

  0003c	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  00041	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_Sleep

; 44   : 			nTry++;

  00047	8b 44 24 48	 mov	 eax, DWORD PTR nTry$81714[rsp]
  0004b	83 c0 01	 add	 eax, 1
  0004e	89 44 24 48	 mov	 DWORD PTR nTry$81714[rsp], eax

; 45   : 			QueryServiceStatus(ServiceHandle,&ss);

  00052	48 8d 54 24 28	 lea	 rdx, QWORD PTR ss$[rsp]
  00057	48 8b 4c 24 60	 mov	 rcx, QWORD PTR ServiceHandle$[rsp]
  0005c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_QueryServiceStatus

; 46   : 		}while(ss.dwCurrentState==SERVICE_START_PENDING && nTry<0x80);

  00062	83 7c 24 2c 02	 cmp	 DWORD PTR ss$[rsp+4], 2
  00067	75 0a		 jne	 SHORT $LN1@StartDrive
  00069	81 7c 24 48 80
	00 00 00	 cmp	 DWORD PTR nTry$81714[rsp], 128 ; 00000080H
  00071	7c c9		 jl	 SHORT $LN4@StartDrive
$LN1@StartDrive:
$LN5@StartDrive:

; 47   : 	}
; 48   : 	return Ret;

  00073	8b 44 24 20	 mov	 eax, DWORD PTR Ret$[rsp]

; 49   : }

  00077	48 83 c4 58	 add	 rsp, 88			; 00000058H
  0007b	c3		 ret	 0
StartDriver ENDP
_TEXT	ENDS
PUBLIC	StopDriver
EXTRN	__imp_ControlService:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$StopDriver DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$StopDriver
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$StopDriver DD 020a01H
	DD	07006720aH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT StopDriver
_TEXT	SEGMENT
ss$ = 32
ServiceHandle$ = 80
StopDriver PROC						; COMDAT

; 52   : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H

; 53   : 	SERVICE_STATUS ss;
; 54   : 	RtlZeroMemory(&ss,sizeof(ss));

  0000a	48 8d 7c 24 20	 lea	 rdi, QWORD PTR ss$[rsp]
  0000f	33 c0		 xor	 eax, eax
  00011	b9 1c 00 00 00	 mov	 ecx, 28
  00016	f3 aa		 rep stosb

; 55   : 	return ControlService(ServiceHandle,SERVICE_CONTROL_STOP,&ss);

  00018	4c 8d 44 24 20	 lea	 r8, QWORD PTR ss$[rsp]
  0001d	ba 01 00 00 00	 mov	 edx, 1
  00022	48 8b 4c 24 50	 mov	 rcx, QWORD PTR ServiceHandle$[rsp]
  00027	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_ControlService

; 56   : }

  0002d	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
StopDriver ENDP
_TEXT	ENDS
PUBLIC	DeleteDriver
EXTRN	__imp_CloseServiceHandle:PROC
EXTRN	__imp_DeleteService:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$DeleteDriver DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$DeleteDriver
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$DeleteDriver DD 010901H
	DD	04209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT DeleteDriver
_TEXT	SEGMENT
ServiceHandle$ = 48
DeleteDriver PROC					; COMDAT

; 59   : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 60   : 	DeleteService(ServiceHandle);

  00009	48 8b 4c 24 30	 mov	 rcx, QWORD PTR ServiceHandle$[rsp]
  0000e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DeleteService

; 61   : 	CloseServiceHandle(ScmHandle);

  00014	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ScmHandle
  0001b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CloseServiceHandle

; 62   : }

  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	c3		 ret	 0
DeleteDriver ENDP
_TEXT	ENDS
PUBLIC	OpenDriverLink
EXTRN	__imp_CreateFileW:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$OpenDriverLink DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$OpenDriverLink
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$OpenDriverLink DD 010901H
	DD	08209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT OpenDriverLink
_TEXT	SEGMENT
LinkName$ = 80
OpenDriverLink PROC					; COMDAT

; 65   : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 66   : 	return CreateFileW(LinkName,GENERIC_READ|GENERIC_WRITE,FILE_SHARE_READ,NULL,OPEN_EXISTING,FILE_ATTRIBUTE_NORMAL,NULL);

  00009	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR [rsp+48], 0
  00012	c7 44 24 28 80
	00 00 00	 mov	 DWORD PTR [rsp+40], 128	; 00000080H
  0001a	c7 44 24 20 03
	00 00 00	 mov	 DWORD PTR [rsp+32], 3
  00022	45 33 c9	 xor	 r9d, r9d
  00025	41 b8 01 00 00
	00		 mov	 r8d, 1
  0002b	ba 00 00 00 c0	 mov	 edx, -1073741824	; c0000000H
  00030	48 8b 4c 24 50	 mov	 rcx, QWORD PTR LinkName$[rsp]
  00035	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CreateFileW

; 67   : }

  0003b	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0003f	c3		 ret	 0
OpenDriverLink ENDP
_TEXT	ENDS
PUBLIC	load_driver
EXTRN	printf:PROC
EXTRN	swprintf:PROC
EXTRN	malloc:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$load_driver DD imagerel $LN11
	DD	imagerel $LN11+294
	DD	imagerel $unwind$load_driver
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$load_driver DD 010401H
	DD	0a204H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT load_driver
_TEXT	SEGMENT
peb_p$ = 32
proc_param$81739 = 40
dir_path$81743 = 48
DrvPath$81746 = 56
tv93 = 64
load_driver PROC					; COMDAT

; 70   : {

$LN11:
  00000	48 83 ec 58	 sub	 rsp, 88			; 00000058H

; 71   : 	ulong_ptr peb_p=__readtebptr(12*sizeof(void*));

  00004	65 48 8b 04 25
	60 00 00 00	 mov	 rax, QWORD PTR gs:96
  0000d	48 89 44 24 20	 mov	 QWORD PTR peb_p$[rsp], rax

; 72   :     if(peb_p)

  00012	48 83 7c 24 20
	00		 cmp	 QWORD PTR peb_p$[rsp], 0
  00018	0f 84 f5 00 00
	00		 je	 $LN6@load_drive

; 73   :     {
; 74   :         ulong_ptr proc_param=*(ulong_ptr*)(peb_p+sizeof(void*)*4);

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR peb_p$[rsp]
  00023	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00027	48 89 44 24 28	 mov	 QWORD PTR proc_param$81739[rsp], rax

; 75   :         if(proc_param)

  0002c	48 83 7c 24 28
	00		 cmp	 QWORD PTR proc_param$81739[rsp], 0
  00032	0f 84 db 00 00
	00		 je	 $LN5@load_drive

; 76   :         {
; 77   :             unicode_string_p dir_path=(unicode_string_p)(proc_param+sizeof(void*)*5+0x10);

  00038	48 8b 44 24 28	 mov	 rax, QWORD PTR proc_param$81739[rsp]
  0003d	48 83 c0 38	 add	 rax, 56			; 00000038H
  00041	48 89 44 24 30	 mov	 QWORD PTR dir_path$81743[rsp], rax

; 78   : 			PWSTR DrvPath=malloc(dir_path->length+0x20);

  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR dir_path$81743[rsp]
  0004b	0f b7 00	 movzx	 eax, WORD PTR [rax]
  0004e	83 c0 20	 add	 eax, 32			; 00000020H
  00051	48 63 c8	 movsxd	 rcx, eax
  00054	e8 00 00 00 00	 call	 malloc
  00059	48 89 44 24 38	 mov	 QWORD PTR DrvPath$81746[rsp], rax

; 79   : 			swprintf(DrvPath,L"%wZvirtchk.sys\0",dir_path);

  0005e	4c 8b 44 24 30	 mov	 r8, QWORD PTR dir_path$81743[rsp]
  00063	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG81747
  0006a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR DrvPath$81746[rsp]
  0006f	e8 00 00 00 00	 call	 swprintf

; 80   : 			printf("Driver Path should be: %ws\n",DrvPath);

  00074	48 8b 54 24 38	 mov	 rdx, QWORD PTR DrvPath$81746[rsp]
  00079	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG81748
  00080	e8 00 00 00 00	 call	 printf

; 81   : 			DriverServiceHandle=InstallDriver(DrvPath,L"virtchk",L"virtchk");

  00085	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG81749
  0008c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG81750
  00093	48 8b 4c 24 38	 mov	 rcx, QWORD PTR DrvPath$81746[rsp]
  00098	e8 00 00 00 00	 call	 InstallDriver
  0009d	48 89 05 00 00
	00 00		 mov	 QWORD PTR DriverServiceHandle, rax

; 82   : 			if(DriverServiceHandle)

  000a4	48 83 3d 00 00
	00 00 00	 cmp	 QWORD PTR DriverServiceHandle, 0
  000ac	74 55		 je	 SHORT $LN4@load_drive

; 83   : 			{
; 84   : 				if(StartDriver(DriverServiceHandle))

  000ae	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR DriverServiceHandle
  000b5	e8 00 00 00 00	 call	 StartDriver
  000ba	85 c0		 test	 eax, eax
  000bc	74 15		 je	 SHORT $LN3@load_drive

; 85   : 					DeviceHandle=OpenDriverLink(L"\\\\.\\virtchk");

  000be	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG81753
  000c5	e8 00 00 00 00	 call	 OpenDriverLink
  000ca	48 89 05 00 00
	00 00		 mov	 QWORD PTR DeviceHandle, rax

; 86   : 				else

  000d1	eb 0c		 jmp	 SHORT $LN2@load_drive
$LN3@load_drive:

; 87   : 					printf("Failed to load start driver!\n");

  000d3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG81755
  000da	e8 00 00 00 00	 call	 printf
$LN2@load_drive:

; 88   : 				return DeviceHandle!=NULL;

  000df	48 83 3d 00 00
	00 00 00	 cmp	 QWORD PTR DeviceHandle, 0
  000e7	74 0a		 je	 SHORT $LN9@load_drive
  000e9	c7 44 24 40 01
	00 00 00	 mov	 DWORD PTR tv93[rsp], 1
  000f1	eb 08		 jmp	 SHORT $LN10@load_drive
$LN9@load_drive:
  000f3	c7 44 24 40 00
	00 00 00	 mov	 DWORD PTR tv93[rsp], 0
$LN10@load_drive:
  000fb	8b 44 24 40	 mov	 eax, DWORD PTR tv93[rsp]
  000ff	eb 20		 jmp	 SHORT $LN7@load_drive

; 89   : 			}
; 90   : 			else

  00101	eb 0c		 jmp	 SHORT $LN1@load_drive
$LN4@load_drive:

; 91   : 				printf("Failed to install driver!\n");

  00103	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG81758
  0010a	e8 00 00 00 00	 call	 printf
$LN1@load_drive:

; 92   : 			return false;

  0010f	33 c0		 xor	 eax, eax
  00111	eb 0e		 jmp	 SHORT $LN7@load_drive
$LN5@load_drive:
$LN6@load_drive:

; 93   :         }
; 94   :     }
; 95   : 	printf("Failed to get local path!\n");

  00113	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG81759
  0011a	e8 00 00 00 00	 call	 printf

; 96   : 	return false;

  0011f	33 c0		 xor	 eax, eax
$LN7@load_drive:

; 97   : }

  00121	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00125	c3		 ret	 0
load_driver ENDP
_TEXT	ENDS
PUBLIC	unload_driver
EXTRN	__imp_CloseHandle:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$unload_driver DD imagerel $LN5
	DD	imagerel $LN5+112
	DD	imagerel $unwind$unload_driver
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$unload_driver DD 010401H
	DD	04204H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT unload_driver
_TEXT	SEGMENT
unload_driver PROC					; COMDAT

; 100  : {

$LN5:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 101  : 	if(DriverServiceHandle)

  00004	48 83 3d 00 00
	00 00 00	 cmp	 QWORD PTR DriverServiceHandle, 0
  0000c	74 25		 je	 SHORT $LN2@unload_dri

; 102  : 	{
; 103  : 		StopDriver(DriverServiceHandle);

  0000e	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR DriverServiceHandle
  00015	e8 00 00 00 00	 call	 StopDriver

; 104  : 		DeleteDriver(DriverServiceHandle);

  0001a	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR DriverServiceHandle
  00021	e8 00 00 00 00	 call	 DeleteDriver

; 105  : 		CloseServiceHandle(DriverServiceHandle);

  00026	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR DriverServiceHandle
  0002d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CloseServiceHandle
$LN2@unload_dri:

; 106  : 	}
; 107  : 	DriverServiceHandle=NULL;

  00033	48 c7 05 00 00
	00 00 00 00 00
	00		 mov	 QWORD PTR DriverServiceHandle, 0

; 108  : 	ScmHandle=NULL;

  0003e	48 c7 05 00 00
	00 00 00 00 00
	00		 mov	 QWORD PTR ScmHandle, 0

; 109  : 	if(DeviceHandle)

  00049	48 83 3d 00 00
	00 00 00	 cmp	 QWORD PTR DeviceHandle, 0
  00051	74 18		 je	 SHORT $LN1@unload_dri

; 110  : 	{
; 111  : 		CloseHandle(DeviceHandle);

  00053	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR DeviceHandle
  0005a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CloseHandle

; 112  : 		DeviceHandle=NULL;

  00060	48 c7 05 00 00
	00 00 00 00 00
	00		 mov	 QWORD PTR DeviceHandle, 0
$LN1@unload_dri:

; 113  : 	}
; 114  : }

  0006b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006f	c3		 ret	 0
unload_driver ENDP
_TEXT	ENDS
END
