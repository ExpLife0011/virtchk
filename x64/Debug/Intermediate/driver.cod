; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.207 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG21242 DB	'\', 00H, 'D', 00H, 'o', 00H, 's', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'v'
	DB	00H, 'i', 00H, 'r', 00H, 't', 00H, 'c', 00H, 'h', 00H, 'k', 00H
	DB	00H, 00H
$SG21243 DB	'\', 00H, 'D', 00H, 'o', 00H, 's', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'v'
	DB	00H, 'i', 00H, 'r', 00H, 't', 00H, 'c', 00H, 'h', 00H, 'k', 00H
	DB	00H, 00H
$SG21263 DB	'\', 00H, 'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H
	DB	'e', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'r', 00H, 't', 00H, 'c'
	DB	00H, 'h', 00H, 'k', 00H, 00H, 00H
$SG21264 DB	'\', 00H, 'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H
	DB	'e', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'r', 00H, 't', 00H, 'c'
	DB	00H, 'h', 00H, 'k', 00H, 00H, 00H
$SG21266 DB	'\', 00H, 'D', 00H, 'o', 00H, 's', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'v'
	DB	00H, 'i', 00H, 'r', 00H, 't', 00H, 'c', 00H, 'h', 00H, 'k', 00H
	DB	00H, 00H
$SG21267 DB	'\', 00H, 'D', 00H, 'o', 00H, 's', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'v'
	DB	00H, 'i', 00H, 'r', 00H, 't', 00H, 'c', 00H, 'h', 00H, 'k', 00H
	DB	00H, 00H
_DATA	ENDS
PUBLIC	DispatchCreateClose
EXTRN	__imp_IofCompleteRequest:PROC
;	COMDAT pdata
; File d:\projects\virtchk\virtchk_drv\driver.c
pdata	SEGMENT
$pdata$DispatchCreateClose DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$DispatchCreateClose
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$DispatchCreateClose DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT DispatchCreateClose
_TEXT	SEGMENT
DeviceObject$ = 48
Irp$ = 56
DispatchCreateClose PROC				; COMDAT

; 6    : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 7    : 	Irp->IoStatus.Status=STATUS_SUCCESS;

  0000e	48 8b 44 24 38	 mov	 rax, QWORD PTR Irp$[rsp]
  00013	c7 40 30 00 00
	00 00		 mov	 DWORD PTR [rax+48], 0

; 8    : 	Irp->IoStatus.Information=0;

  0001a	48 8b 44 24 38	 mov	 rax, QWORD PTR Irp$[rsp]
  0001f	48 c7 40 38 00
	00 00 00	 mov	 QWORD PTR [rax+56], 0

; 9    : 	IoCompleteRequest(Irp,IO_NO_INCREMENT);

  00027	33 d2		 xor	 edx, edx
  00029	48 8b 4c 24 38	 mov	 rcx, QWORD PTR Irp$[rsp]
  0002e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_IofCompleteRequest

; 10   : 	return STATUS_SUCCESS;

  00034	33 c0		 xor	 eax, eax

; 11   : }

  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	c3		 ret	 0
DispatchCreateClose ENDP
_TEXT	ENDS
PUBLIC	IoGetCurrentIrpStackLocation
PUBLIC	DispatchIoControl
;	COMDAT pdata
pdata	SEGMENT
$pdata$DispatchIoControl DD imagerel $LN8
	DD	imagerel $LN8+211
	DD	imagerel $unwind$DispatchIoControl
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$DispatchIoControl DD 010e01H
	DD	0a20eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT DispatchIoControl
_TEXT	SEGMENT
uOutSize$ = 32
IrpStack$ = 40
st$ = 48
pIoBuffer$ = 56
uInSize$ = 64
uIoControlCode$ = 68
tv70 = 72
DeviceObject$ = 96
Irp$ = 104
DispatchIoControl PROC					; COMDAT

; 14   : {

$LN8:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 58	 sub	 rsp, 88			; 00000058H

; 15   : 	NTSTATUS st=STATUS_INVALID_DEVICE_REQUEST;

  0000e	c7 44 24 30 10
	00 00 c0	 mov	 DWORD PTR st$[rsp], -1073741808 ; ffffffffc0000010H

; 16   : 	PIO_STACK_LOCATION IrpStack=IoGetCurrentIrpStackLocation(Irp);

  00016	48 8b 4c 24 68	 mov	 rcx, QWORD PTR Irp$[rsp]
  0001b	e8 00 00 00 00	 call	 IoGetCurrentIrpStackLocation
  00020	48 89 44 24 28	 mov	 QWORD PTR IrpStack$[rsp], rax

; 17   : 	ULONG uIoControlCode=IrpStack->Parameters.DeviceIoControl.IoControlCode;

  00025	48 8b 44 24 28	 mov	 rax, QWORD PTR IrpStack$[rsp]
  0002a	8b 40 18	 mov	 eax, DWORD PTR [rax+24]
  0002d	89 44 24 44	 mov	 DWORD PTR uIoControlCode$[rsp], eax

; 18   : 	PVOID pIoBuffer=Irp->AssociatedIrp.SystemBuffer;

  00031	48 8b 44 24 68	 mov	 rax, QWORD PTR Irp$[rsp]
  00036	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0003a	48 89 44 24 38	 mov	 QWORD PTR pIoBuffer$[rsp], rax

; 19   : 	ULONG uInSize=IrpStack->Parameters.DeviceIoControl.InputBufferLength;

  0003f	48 8b 44 24 28	 mov	 rax, QWORD PTR IrpStack$[rsp]
  00044	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00047	89 44 24 40	 mov	 DWORD PTR uInSize$[rsp], eax

; 20   : 	ULONG uOutSize=IrpStack->Parameters.DeviceIoControl.OutputBufferLength;

  0004b	48 8b 44 24 28	 mov	 rax, QWORD PTR IrpStack$[rsp]
  00050	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00053	89 44 24 20	 mov	 DWORD PTR uOutSize$[rsp], eax

; 21   : 	switch(uIoControlCode)

  00057	8b 44 24 44	 mov	 eax, DWORD PTR uIoControlCode$[rsp]
  0005b	89 44 24 48	 mov	 DWORD PTR tv70[rsp], eax
  0005f	81 7c 24 48 04
	20 22 00	 cmp	 DWORD PTR tv70[rsp], 2236420 ; 00222004H
  00067	74 02		 je	 SHORT $LN3@DispatchIo
  00069	eb 23		 jmp	 SHORT $LN4@DispatchIo
$LN3@DispatchIo:

; 22   : 	{
; 23   : 		case IOCTL_Rdmsr:
; 24   : 		{
; 25   : 			*(PULONG64)pIoBuffer=__readmsr(*(PULONG32)pIoBuffer);

  0006b	48 8b 44 24 38	 mov	 rax, QWORD PTR pIoBuffer$[rsp]
  00070	8b 08		 mov	 ecx, DWORD PTR [rax]
  00072	0f 32		 rdmsr
  00074	48 c1 e2 20	 shl	 rdx, 32			; 00000020H
  00078	48 0b c2	 or	 rax, rdx
  0007b	48 8b c8	 mov	 rcx, rax
  0007e	48 8b 44 24 38	 mov	 rax, QWORD PTR pIoBuffer$[rsp]
  00083	48 89 08	 mov	 QWORD PTR [rax], rcx

; 26   : 			st=STATUS_SUCCESS;

  00086	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR st$[rsp], 0
$LN4@DispatchIo:

; 27   : 			break;
; 28   : 		}
; 29   : 	}
; 30   : 	if(st==STATUS_SUCCESS)

  0008e	83 7c 24 30 00	 cmp	 DWORD PTR st$[rsp], 0
  00093	75 0f		 jne	 SHORT $LN2@DispatchIo

; 31   : 		Irp->IoStatus.Information=uOutSize;

  00095	8b 4c 24 20	 mov	 ecx, DWORD PTR uOutSize$[rsp]
  00099	48 8b 44 24 68	 mov	 rax, QWORD PTR Irp$[rsp]
  0009e	48 89 48 38	 mov	 QWORD PTR [rax+56], rcx

; 32   : 	else

  000a2	eb 0d		 jmp	 SHORT $LN1@DispatchIo
$LN2@DispatchIo:

; 33   : 		Irp->IoStatus.Information=0;

  000a4	48 8b 44 24 68	 mov	 rax, QWORD PTR Irp$[rsp]
  000a9	48 c7 40 38 00
	00 00 00	 mov	 QWORD PTR [rax+56], 0
$LN1@DispatchIo:

; 34   : 	Irp->IoStatus.Status=st;

  000b1	48 8b 4c 24 68	 mov	 rcx, QWORD PTR Irp$[rsp]
  000b6	8b 44 24 30	 mov	 eax, DWORD PTR st$[rsp]
  000ba	89 41 30	 mov	 DWORD PTR [rcx+48], eax

; 35   : 	IoCompleteRequest(Irp,IO_NO_INCREMENT);

  000bd	33 d2		 xor	 edx, edx
  000bf	48 8b 4c 24 68	 mov	 rcx, QWORD PTR Irp$[rsp]
  000c4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_IofCompleteRequest

; 36   : 	return st;

  000ca	8b 44 24 30	 mov	 eax, DWORD PTR st$[rsp]

; 37   : }

  000ce	48 83 c4 58	 add	 rsp, 88			; 00000058H
  000d2	c3		 ret	 0
DispatchIoControl ENDP
; Function compile flags: /Odtp
; File c:\winddk\7600.16385.1\inc\ddk\wdm.h
_TEXT	ENDS
;	COMDAT IoGetCurrentIrpStackLocation
_TEXT	SEGMENT
Irp$ = 8
IoGetCurrentIrpStackLocation PROC			; COMDAT

; 23316: {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 23317:     ASSERT(Irp->CurrentLocation <= Irp->StackCount + 1);
; 23318:     return Irp->Tail.Overlay.CurrentStackLocation;

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR Irp$[rsp]
  0000a	48 8b 80 b8 00
	00 00		 mov	 rax, QWORD PTR [rax+184]

; 23319: }

  00011	c3		 ret	 0
IoGetCurrentIrpStackLocation ENDP
_TEXT	ENDS
PUBLIC	DriverUnload
EXTRN	__imp_IoDeleteDevice:PROC
EXTRN	__imp_IoDeleteSymbolicLink:PROC
;	COMDAT pdata
; File d:\projects\virtchk\virtchk_drv\driver.c
pdata	SEGMENT
$pdata$DriverUnload DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$DriverUnload
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$DriverUnload DD 010901H
	DD	06209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT DriverUnload
_TEXT	SEGMENT
strLink$ = 32
DriverObject$ = 64
DriverUnload PROC					; COMDAT

; 40   : {	

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 41   : 	UNICODE_STRING strLink=RTL_CONSTANT_STRING(LINK_NAME);

  00009	b8 26 00 00 00	 mov	 eax, 38			; 00000026H
  0000e	66 89 44 24 20	 mov	 WORD PTR strLink$[rsp], ax
  00013	b8 28 00 00 00	 mov	 eax, 40			; 00000028H
  00018	66 89 44 24 22	 mov	 WORD PTR strLink$[rsp+2], ax
  0001d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG21243
  00024	48 89 44 24 28	 mov	 QWORD PTR strLink$[rsp+8], rax

; 42   : 	IoDeleteSymbolicLink(&strLink);

  00029	48 8d 4c 24 20	 lea	 rcx, QWORD PTR strLink$[rsp]
  0002e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_IoDeleteSymbolicLink

; 43   : 	IoDeleteDevice(DriverObject->DeviceObject);

  00034	48 8b 4c 24 40	 mov	 rcx, QWORD PTR DriverObject$[rsp]
  00039	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_IoDeleteDevice

; 44   : }

  00043	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00047	c3		 ret	 0
DriverUnload ENDP
_TEXT	ENDS
PUBLIC	DriverReinitialize
; Function compile flags: /Odtp
;	COMDAT DriverReinitialize
_TEXT	SEGMENT
DriverObject$ = 8
Context$ = 16
Count$ = 24
DriverReinitialize PROC					; COMDAT

; 47   : {

  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 48   : 	;
; 49   : }

  0000f	c3		 ret	 0
DriverReinitialize ENDP
_TEXT	ENDS
PUBLIC	DriverEntry
EXTRN	__imp_IoCreateSymbolicLink:PROC
EXTRN	__imp_IoCreateDevice:PROC
EXTRN	__imp_IoRegisterDriverReinitialization:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$DriverEntry DD imagerel $LN5
	DD	imagerel $LN5+322
	DD	imagerel $unwind$DriverEntry
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$DriverEntry DD 010e01H
	DD	0e20eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT DriverEntry
_TEXT	SEGMENT
pDevObj$ = 64
st$ = 72
uniLinkName$ = 80
uniDeviceName$ = 96
DriverObject$ = 128
RegistryString$ = 136
DriverEntry PROC					; COMDAT

; 52   : {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 78	 sub	 rsp, 120		; 00000078H

; 53   : 	NTSTATUS st=STATUS_SUCCESS;

  0000e	c7 44 24 48 00
	00 00 00	 mov	 DWORD PTR st$[rsp], 0

; 54   : 	PDEVICE_OBJECT pDevObj = NULL;

  00016	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR pDevObj$[rsp], 0

; 55   : 	UNICODE_STRING uniDeviceName=RTL_CONSTANT_STRING(DEVICE_NAME);

  0001f	b8 1e 00 00 00	 mov	 eax, 30
  00024	66 89 44 24 60	 mov	 WORD PTR uniDeviceName$[rsp], ax
  00029	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  0002e	66 89 44 24 62	 mov	 WORD PTR uniDeviceName$[rsp+2], ax
  00033	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG21264
  0003a	48 89 44 24 68	 mov	 QWORD PTR uniDeviceName$[rsp+8], rax

; 56   : 	UNICODE_STRING uniLinkName=RTL_CONSTANT_STRING(LINK_NAME);

  0003f	b8 26 00 00 00	 mov	 eax, 38			; 00000026H
  00044	66 89 44 24 50	 mov	 WORD PTR uniLinkName$[rsp], ax
  00049	b8 28 00 00 00	 mov	 eax, 40			; 00000028H
  0004e	66 89 44 24 52	 mov	 WORD PTR uniLinkName$[rsp+2], ax
  00053	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG21267
  0005a	48 89 44 24 58	 mov	 QWORD PTR uniLinkName$[rsp+8], rax

; 57   : 	//
; 58   : 	DriverObject->DriverUnload=DriverUnload;

  0005f	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR DriverObject$[rsp]
  00067	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:DriverUnload
  0006e	48 89 41 68	 mov	 QWORD PTR [rcx+104], rax

; 59   : 	DriverObject->MajorFunction[IRP_MJ_CREATE]=DriverObject->MajorFunction[IRP_MJ_CLOSE]=DispatchCreateClose;

  00072	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR DriverObject$[rsp]
  0007a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:DispatchCreateClose
  00081	48 89 81 80 00
	00 00		 mov	 QWORD PTR [rcx+128], rax
  00088	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR DriverObject$[rsp]
  00090	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR DriverObject$[rsp]
  00098	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  0009f	48 89 41 70	 mov	 QWORD PTR [rcx+112], rax

; 60   : 	DriverObject->MajorFunction[IRP_MJ_DEVICE_CONTROL]=DispatchIoControl;

  000a3	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR DriverObject$[rsp]
  000ab	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:DispatchIoControl
  000b2	48 89 81 e0 00
	00 00		 mov	 QWORD PTR [rcx+224], rax

; 61   : 	IoRegisterDriverReinitialization(DriverObject,DriverReinitialize,NULL);

  000b9	45 33 c0	 xor	 r8d, r8d
  000bc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:DriverReinitialize
  000c3	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR DriverObject$[rsp]
  000cb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_IoRegisterDriverReinitialization

; 62   : 	//
; 63   : 	st=IoCreateDevice(DriverObject,0,&uniDeviceName,FILE_DEVICE_UNKNOWN,0,FALSE,&pDevObj);

  000d1	4c 8d 5c 24 40	 lea	 r11, QWORD PTR pDevObj$[rsp]
  000d6	4c 89 5c 24 30	 mov	 QWORD PTR [rsp+48], r11
  000db	c6 44 24 28 00	 mov	 BYTE PTR [rsp+40], 0
  000e0	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  000e8	41 b9 22 00 00
	00		 mov	 r9d, 34			; 00000022H
  000ee	4c 8d 44 24 60	 lea	 r8, QWORD PTR uniDeviceName$[rsp]
  000f3	33 d2		 xor	 edx, edx
  000f5	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR DriverObject$[rsp]
  000fd	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_IoCreateDevice
  00103	89 44 24 48	 mov	 DWORD PTR st$[rsp], eax

; 64   : 	if(NT_SUCCESS(st))

  00107	83 7c 24 48 00	 cmp	 DWORD PTR st$[rsp], 0
  0010c	7c 2b		 jl	 SHORT $LN2@DriverEntr

; 65   : 	{
; 66   : 		st=IoCreateSymbolicLink(&uniLinkName,&uniDeviceName);

  0010e	48 8d 54 24 60	 lea	 rdx, QWORD PTR uniDeviceName$[rsp]
  00113	48 8d 4c 24 50	 lea	 rcx, QWORD PTR uniLinkName$[rsp]
  00118	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_IoCreateSymbolicLink
  0011e	89 44 24 48	 mov	 DWORD PTR st$[rsp], eax

; 67   : 		if(NT_ERROR(st))IoDeleteDevice(pDevObj);

  00122	8b 44 24 48	 mov	 eax, DWORD PTR st$[rsp]
  00126	c1 e8 1e	 shr	 eax, 30
  00129	83 f8 03	 cmp	 eax, 3
  0012c	75 0b		 jne	 SHORT $LN1@DriverEntr
  0012e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pDevObj$[rsp]
  00133	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_IoDeleteDevice
$LN1@DriverEntr:
$LN2@DriverEntr:

; 68   : 	}
; 69   : 	return st;

  00139	8b 44 24 48	 mov	 eax, DWORD PTR st$[rsp]

; 70   : }

  0013d	48 83 c4 78	 add	 rsp, 120		; 00000078H
  00141	c3		 ret	 0
DriverEntry ENDP
_TEXT	ENDS
END
